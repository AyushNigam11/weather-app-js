{"version":3,"sources":["app_component/form.component.jsx","app_component/weather.component.jsx","App.js","serviceWorker.js","index.js"],"names":["error","props","react_default","a","createElement","className","role","Form","onSubmit","loadweather","type","placeholder","name","autoComplete","Weather","cityname","concat","weatherIcon","temp_celsius","min","max","maxminTemp","temp_min","temp_max","description","charAt","toUpperCase","slice","Api_Key","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getWeather","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","country","city","api_call","response","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","sent","json","setState","sys","main","weather","celsius","calCelsius","temp","get_WeatherIcon","id","console","log","stop","_x","apply","arguments","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","Math","floor","form_component","weather_component","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c0f73ec.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./form.style.css\";\n\nconst Form = props => {\n  return (\n    <div className=\"container h-100\">\n      <form onSubmit={props.loadweather}>\n        <div>{props.error ? error() : \"\"}</div>\n        <div className=\"row\">\n          <div className=\"col-md-3 offset-md-2\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"City\"\n              name=\"city\"\n              autoComplete=\"off\"\n            />\n          </div>\n          <div className=\"col-md-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Country\"\n              name=\"country\"\n              autoComplete=\"off\"\n            />\n          </div>\n          <div className=\"col-md-3 mt-md-0 mt-2 text-md-left \">\n            <button className=\"btn btn-warning\">Get Weather</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst error = props => {\n  return (\n    <div className=\"alert alert-danger mx-5\" role=\"alert\">\n      Please Enter City and Country...!\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport \"./weather.style.css\";\n\nconst Weather = props => {\n  return (\n    <div className=\"container text-light\">\n      <div className=\"Card\">\n        <h1 className=\"text-white py-3\">{props.cityname}</h1>\n        <h5 className=\"py-4\">\n          <i className={`wi ${props.weatherIcon} display-1`} />\n        </h5>\n\n        {/* Get Celsius */}\n        {props.temp_celsius ? (\n          <h1 className=\"py-2\">{props.temp_celsius}&deg;</h1>\n        ) : null}\n\n        {/* show max and min temp */}\n        {maxminTemp(props.temp_min, props.temp_max)}\n\n        {/* Weather description */}\n        <h4 className=\"py-3\">\n          {props.description.charAt(0).toUpperCase() +\n            props.description.slice(1)}\n        </h4>\n      </div>\n    </div>\n  );\n};\n\nexport default Weather;\n\nfunction maxminTemp(min, max) {\n  if (max && min) {\n    return (\n      <h3>\n        <span className=\"px-4\">{min}&deg;</span>\n        <span className=\"px-4\">{max}&deg;</span>\n      </h3>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Form from \"./app_component/form.component\";\nimport Weather from \"./app_component/weather.component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// git project https://github.com/erikflowers/weather-icons\nimport \"weather-icons/css/weather-icons.css\";\n\nconst Api_Key = \"429736441cf3572838aa10530929f7cd\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: null,\n      temp_min: null,\n      description: \"\",\n      error: false\n    };\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({ icon: icons.Thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: icons.Drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({ icon: icons.Rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: icons.Snow });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: icons.Atmosphere });\n        break;\n      case rangeId === 800:\n        this.setState({ icon: icons.Clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: icons.Clouds });\n        break;\n      default:\n        this.setState({ icon: icons.Clouds });\n    }\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  getWeather = async e => {\n    e.preventDefault();\n\n    const country = e.target.elements.country.value;\n    const city = e.target.elements.city.value;\n\n    if (country && city) {\n      const api_call = await fetch(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${Api_Key}`\n      );\n\n      const response = await api_call.json();\n\n      this.setState({\n        city: `${response.name}, ${response.sys.country}`,\n        country: response.sys.country,\n        main: response.weather[0].main,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        error: false\n      });\n\n      // seting icons\n      this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n\n      console.log(response);\n    } else {\n      this.setState({\n        error: true\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadweather={this.getWeather} error={this.state.error} />\n        <Weather\n          cityname={this.state.city}\n          weatherIcon={this.state.icon}\n          temp_celsius={this.state.celsius}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          description={this.state.description}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}